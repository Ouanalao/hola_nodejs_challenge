exports.filter = function(messages, rules){var _m,_r,_o={},_re=/([*]+([?]?)+)+/g;/*Check chars between x20 and x7f:*/function _chkCh(t){if(t){return(/[\x20-\x7f]+/.test(t));}return(false);}/*Check rule's fields:*/function _chkRule(o){var _v;for(var fld in o){_v=o[fld];switch(fld){case('from'):case('to'):if(!_chkCh(_v)){return(false)};o[fld]= _v.replace(_re, '*');break;case('action'):if(!_chkCh(_v)) return(false);break;}}return(true);}/*Check rules array:*/function _chkFlt(a){var _a=[];if(a){var _r,_n;for(var i=0;i<a.length;i++){_r=a[i];if(!_r){console.log("Error in rule#"+i+": rule is empty;");}else if(_chkRule(_r)){_a.push(_r);}else{console.log("Error in rule#"+i+":[from:"+_r.from+",to:"+_r.to+",action:"+_r.action+"];");}}}return(_a);}/*Check messages fields:*/function _chkMsg(m){return(m&&_chkCh(m.from)&&_chkCh(m.to));}/*Check field by mask:*/function _chkFld(f,m){if(m&&m!==''&&m!=='*'){var i=0,j=0,fl=f.length-1,ml=m.length-1;for(;i<=fl&&j<=ml;i++){var mch=m[j],fch=f[i];switch(mch){case('*'):if(j==ml){return(true);}else if((i=f.indexOf(m[j+1],i))>=0){j++;if(i==fl&&j==ml){return(true);}	else if(i<fl&&j<ml){j++;}else{return(false);}}else{return(false);}break;default:if(mch!=fch){return(false);}case('?'):if(i<fl&&j<ml){j++;}else{return(i==fl&&j==ml);}break;}}}else{return(true);}return(false);}/*Main:*/if(messages){rules=_chkFlt(rules);if(rules){for(var n in messages){_m=messages[n];_o[n]=[];if(!_chkMsg(_m)){if(!_m){console.log("Error in message#"+n+": message is null;");}else{console.log("Error in message#"+n+":[from:"+_m.from+",to:"+_m.to+"];");}}else{for(var i=0;i<rules.length;i++){_r=rules[i];if(_chkFld(_m.from, _r.from)&&_chkFld(_m.to, _r.to)){_o[n].push(_r.action);}}}}}else{console.log("Rules not set;");}}else{console.log("No messages to filter;");}return(_o);};